{"version":3,"sources":["component/Main.js","component/Footer.js","component/App.js","index.js"],"names":["iconTrash","icon","faTrashAlt","iconUndo","faUndo","iconRedo","faRedo","iconPlay","faPlay","iconSmile","faSmile","iconMeh","faMeh","iconDizzy","faDizzy","iconCalculator","faCalculator","unit1","R","unit2","Object","values","unit3","map","n","units","peers","i","myUnits","filter","u","includes","assign","pos","val","acc","x","eliminate","replace","work","length","fixed","load","str","parsed","entries","search","v","arr","sort","a","b","findMinValuesPosition","ret","dataEasy","dataNormal","dataHard","magicSquare","messages","en","ja","comments","selectRandomData","dataSudoku","Math","floor","random","Main","props","handleClearData","judgeExistData","window","confirm","showWindowMessage","clearState","handleInsertData","e","buttonType","target","id","exist","selectData","insertData","handleRedo","step","state","history","nextStep","setState","handleSaveData","preventDefault","getHistoryData","squares","getCurrentDataSet","slice","lock","getCurrentLock","input","firstChild","newData","concat","value","edit","handleShowEditor","parseInt","handleSolveSudoku","isSolved","solveSudoku","possible","finish","handleUndo","prevStep","Array","fill","level","comment","this","getHintNumbers","numberData","stringData","String","dataNull","searchNullData","isMagic","judgeMagicSquare","selectedNumbers","hintNumbers","charAt","message","selectTextLang","getCurrentSquares","changeData","createAssistInfo","searchFilledCellIndex","some","toString","numberInCell","type","data","cellIndex","index","push","cnt","texts","text","isEnglish","buttonAction","createMessageClearButton","insertLevelInfo","isSolver","commentSolverMode","commentChallengerMode","addDetailChallenger","className","cell","lockEditor","onSubmit","min","max","Col","xs","span","order","lg","offset","xl","md","onClick","endId","renderEditor","onDoubleClick","renderSquare","Container","fluid","Row","renderComment","renderSidebarLeft","renderSudoku","renderSidebarRight","React","Component","iconLine","faLine","iconTwitter","faTwitterSquare","iconRobot","faRobot","iconLightbulb","faLightbulb","iconGithubSquare","faGithubSquare","iconCheck","faCheck","leftTitles","rightTitles","leftSolver","leftChallenger","rightSolver","rightChallenger","year","Date","getFullYear","Title","title","titles","TextList","listItems","Footer","href","rel","iconLanguage","faLanguage","App","MainRef","createRef","current","changeMode","changeLanguage","ref","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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E,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,KAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,GACnR,CAAC,KAAK,KAAK,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,KAAK,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,KAAK,EAAE,EAAE,EAAE,KAAK,KAAK,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,KAAK,GACnR,CAAC,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,EAAE,KAAK,KAAK,EAAE,EAAE,KAAK,KAAK,EAAE,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,EAAE,KAAK,KAAK,EAAE,EAAE,KAAK,KAAK,KAAK,KAAK,EAAE,EAAE,KAAK,KAAK,KAAK,EAAE,KAAK,EAAE,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,OAGlTC,EAAa,CACf,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,KAAK,EAAE,EAAE,EAAE,KAAK,KAAK,KAAK,KAAK,EAAE,EAAE,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,EAAE,KAAK,KAAK,EAAE,GACjT,CAAC,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,KAAK,KAAK,EAAE,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,EAAE,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,EAAE,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,EAAE,EAAE,KAAK,KAAK,GACzU,CAAC,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,EAAE,KAAK,KAAK,EAAE,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,KAAK,OAG1UC,EAAW,CACb,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,EAAE,KAAK,KAAK,EAAE,EAAE,KAAK,KAAK,KAAK,KAAK,EAAE,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,EAAE,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,EAAE,MAC/U,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,KAAK,KAAK,KAAK,EAAE,EAAE,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,EAAE,EAAE,EAAE,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,EAAE,EAAE,KAAK,KAAK,KAAK,KAAK,MACzU,CAAC,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,KAAK,EAAE,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,EAAE,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,EAAE,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,EAAE,EAAE,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,EAAE,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,EAAE,KAAK,KAAK,KAAK,KAAK,EAAE,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,MACzU,CAAC,EAAE,EAAE,KAAK,KAAK,KAAK,EAAE,EAAE,KAAK,KAAK,EAAE,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,EAAE,KAAK,KAAK,EAAE,EAAE,KAAK,EAAE,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,EAAE,KAAK,EAAE,MAC/U,CAAC,KAAK,KAAK,EAAE,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,EAAE,EAAE,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,EAAE,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,EAAE,KAAK,OAG1UC,EAAc,CAChB,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MACtX,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MACtX,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MACtX,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MACtX,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MACtX,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MACtX,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MACtX,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,K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","file":"static/js/main.46105bab.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Left.min.css';\nimport './Right.min.css';\nimport './Sudoku.min.css';\nimport './Comment.min.css';\n//\nimport {Container, Row, Col} from 'react-bootstrap';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faTrashAlt, faUndo, faRedo, faPlay, faCalculator, faSmile, faMeh, faDizzy} from '@fortawesome/free-solid-svg-icons';\n\nimport * as R from 'ramda';\n\nconst iconTrash = <FontAwesomeIcon icon={faTrashAlt} />;\nconst iconUndo = <FontAwesomeIcon icon={faUndo} />;\nconst iconRedo = <FontAwesomeIcon icon={faRedo} />;\nconst iconPlay = <FontAwesomeIcon icon={faPlay} />;\nconst iconSmile = <FontAwesomeIcon icon={faSmile} />;\nconst iconMeh = <FontAwesomeIcon icon={faMeh} />;\nconst iconDizzy = <FontAwesomeIcon icon={faDizzy} />;\nconst iconCalculator = <FontAwesomeIcon icon={faCalculator} />;\n\n// ==============================================\n\nconst unit1 = R.splitEvery(9, R.range(0, 81));\nconst unit2 = Object.values(R.groupBy(R.flip(R.modulo)(9))(R.range(0, 81)));\nconst baseBox = n => [n, n+1, n+2, n+9, n+10, n+11, n+18, n+19, n+20];\nconst unit3 = [0, 3, 6, 27, 30, 33, 54, 57, 60].map(baseBox);\nconst units = [...unit1, ...unit2, ...unit3];\nconst peers = R.range(0, 81).map((i) => {\n    const myUnits = units.filter(u => u.includes(i));\n    return R.uniq(R.flatten(myUnits)).filter(n => n !== i);\n});\n\n// assign() can fail when contradiction occurs\nconst assign = (pos, val, values) => {\n    if(!values) return false;\n    return R.reduce(\n        (acc, x) => (acc ? eliminate(pos, x, acc) : R.reduced(false)),\n        values,\n        values[pos].replace(val, ''),\n    );\n};\n\n// eliminate() can fail when contradiction occurs\nconst eliminate = (pos, val, values) => {\n    if(!values) return false;\n    if(!values[pos].includes(val)) return values; // do nothing\n    let work = R.clone(values);\n    work[pos] = work[pos].replace(val, ''); // do eliminate\n    if(work[pos].length === 0) return false; // check contradictions\n    // check if something will be triggered\n    if(work[pos].length === 1){ // pattern 1\n        const fixed = work[pos];\n        for (const peer of peers[pos]){\n            work = eliminate(peer, fixed, work);\n            if(!work) return false;\n        }\n    }\n    return work;\n};\n\nconst load = (str) => {\n    let values = R.range(0, 81).map(() => '123456789');\n    const parsed = [...str].filter(x => [...'.0123456789'].includes(x));\n    if(parsed.length !== 81){\n        return null;\n    }\n    for(const [i, val] of parsed.entries()){\n        if(val === '0' || val === '.') continue;\n        values = assign(i, val, values);\n        if(!values) return false;\n    }\n    return values;\n};\n\nconst findMinValuesPosition = (values) => {\n    const arr = values.map((val, i) => [i, val.length]).filter(x => x[1] > 1);\n    arr.sort((a, b) => a[1] - b[1]);\n    return arr[0][0];\n};\n\nconst search = (values) => {\n    if(!values) return false; // faild last setTimeout(function () {\n    if(R.all(v => v.length === 1)(values)) return values; // solved\n    const pos = findMinValuesPosition(values);\n    for(const val of values[pos]){\n        const ret = search(assign(pos, val, values));\n        if(ret) return ret;\n    }\n    return false;\n};\n\n// =============================================\n\nconst dataEasy = [\n    [3,null,null,null,null,null,null,4,null,9,2,4,6,null,5,1,null,3,1,null,null,7,null,4,5,2,null,null,null,2,null,4,9,null,1,6,null,4,9,8,1,null,2,null,null,null,6,null,null,null,null,null,9,null,2,null,5,9,7,null,null,6,4,null,9,null,1,null,3,null,5,2,null,7,null,4,5,null,9,8,1,],\n    [null,null,null,3,9,null,1,6,null,6,2,null,null,1,null,5,null,3,3,5,null,8,6,2,4,null,7,1,8,null,5,3,4,null,7,null,7,null,null,6,2,9,null,null,null,5,null,2,null,8,null,6,3,null,9,1,null,null,null,null,7,null,6,4,null,3,1,null,null,null,null,null,2,6,null,9,null,8,null,null,1,],\n    [1,null,9,4,null,7,null,null,null,null,null,null,9,3,null,null,4,1,null,null,3,8,null,null,9,null,null,4,null,7,null,null,9,null,3,2,null,8,null,null,null,1,null,null,4,null,null,1,null,5,null,null,6,null,8,null,null,5,2,null,null,null,null,2,7,null,null,null,6,null,5,3,null,null,5,null,null,null,null,null,null,],\n];\n\nconst dataNormal = [\n    [null,null,null,null,null,null,null,null,7,7,null,8,2,null,null,3,null,null,1,3,5,6,4,null,null,8,9,8,null,null,null,null,5,7,9,null,null,null,null,null,3,null,null,2,5,null,1,2,null,null,8,null,null,null,6,null,null,null,null,null,1,null,8,null,8,null,9,6,null,null,null,2,null,null,7,null,5,null,null,6,3,],\n    [null,null,null,null,6,null,1,null,9,6,null,null,7,9,null,null,2,null,null,5,null,null,null,1,null,null,null,null,7,1,null,null,6,null,null,2,4,null,null,null,null,null,6,5,1,null,null,null,null,null,null,null,null,null,null,6,null,null,null,7,null,null,5,null,null,null,null,null,null,4,null,null,null,null,4,null,2,8,null,null,3,],\n    [9,null,null,6,null,null,null,null,8,null,null,null,null,null,null,null,3,null,null,null,null,null,8,2,1,null,7,5,4,null,null,null,null,null,null,1,null,null,null,null,2,null,5,null,null,7,1,null,null,null,null,null,null,4,null,null,null,5,null,null,null,2,null,null,null,7,null,null,9,null,null,null,null,9,null,1,null,6,null,null,null,],\n];\n\nconst dataHard = [\n    [null,1,null,9,null,8,null,null,2,null,null,null,null,null,null,4,null,3,null,null,null,null,null,3,null,null,null,null,null,1,null,null,4,8,null,null,8,3,null,null,null,null,7,5,null,null,null,null,null,6,null,null,null,null,4,null,7,null,null,null,null,null,null,2,null,null,null,null,7,5,null,null,null,null,null,2,null,null,null,6,null,],\n    [null,6,null,5,9,null,null,null,2,8,3,null,null,1,null,null,null,null,null,null,2,null,null,null,null,7,null,null,null,4,null,null,null,7,2,null,9,null,3,null,null,null,6,null,null,null,null,null,null,null,1,null,null,null,null,2,9,8,null,null,null,null,6,null,7,null,null,null,null,4,null,null,null,null,8,1,null,null,null,null,null,],\n    [null,null,null,9,null,null,null,3,5,8,5,2,null,null,6,1,null,null,null,null,null,null,null,null,null,6,null,null,8,6,null,9,null,null,null,null,3,2,null,null,null,null,null,4,null,null,null,null,3,2,null,null,null,9,null,null,null,1,6,null,null,null,null,null,null,null,null,8,4,null,null,null,null,3,4,null,null,null,null,null,null,],\n    [8,5,null,null,null,2,4,null,null,7,2,null,null,null,null,null,null,9,null,null,4,null,null,null,null,null,null,null,null,null,1,null,7,null,null,2,3,null,5,null,null,null,9,null,null,null,4,null,null,null,null,null,null,null,null,null,null,null,8,null,null,7,null,null,1,7,null,null,null,null,null,null,null,null,null,null,3,6,null,4,null,],\n    [null,null,5,3,null,null,null,null,null,8,null,null,null,null,null,null,2,null,null,7,null,null,1,null,5,null,null,4,null,null,null,null,5,3,null,null,null,1,null,null,7,null,null,null,6,null,null,3,2,null,null,null,8,null,null,6,null,5,null,null,null,null,9,null,null,4,null,null,null,null,3,null,null,null,null,null,null,9,7,null,null,],\n];\n\nconst magicSquare = [\n    [null,null,null,null,null,null,null,null,null,null,2,null,null,7,null,null,6,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,9,null,null,5,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,4,null,null,3,null,null,8,null,null,null,null,null,null,null,null,null,null,],\n    [null,null,null,null,null,null,null,null,null,null,2,null,null,9,null,null,4,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7,null,null,5,null,null,3,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,6,null,null,1,null,null,8,null,null,null,null,null,null,null,null,null,null,],\n    [null,null,null,null,null,null,null,null,null,null,4,null,null,3,null,null,8,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,9,null,null,5,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,2,null,null,7,null,null,6,null,null,null,null,null,null,null,null,null,null,],\n    [null,null,null,null,null,null,null,null,null,null,4,null,null,9,null,null,2,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,3,null,null,5,null,null,7,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,8,null,null,1,null,null,6,null,null,null,null,null,null,null,null,null,null,],\n    [null,null,null,null,null,null,null,null,null,null,6,null,null,1,null,null,8,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7,null,null,5,null,null,3,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,2,null,null,9,null,null,4,null,null,null,null,null,null,null,null,null,null,],\n    [null,null,null,null,null,null,null,null,null,null,6,null,null,7,null,null,2,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,5,null,null,9,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,8,null,null,3,null,null,4,null,null,null,null,null,null,null,null,null,null,],\n    [null,null,null,null,null,null,null,null,null,null,8,null,null,1,null,null,6,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,3,null,null,5,null,null,7,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,4,null,null,9,null,null,2,null,null,null,null,null,null,null,null,null,null,],\n    [null,null,null,null,null,null,null,null,null,null,8,null,null,3,null,null,4,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,5,null,null,9,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,6,null,null,7,null,null,2,null,null,null,null,null,null,null,null,null,null,],\n];\n\nconst messages = [\n    [\n        {\n            en: 'Do you want to erase the data?',\n            ja: 'データを消去しますか？',\n        },\n    ],[\n        {\n            en: 'Do you want to overwrite the data?',\n            ja: 'データを上書きしますか？',\n        },\n    ]\n];\n\nconst comments = [\n    [\n        {\n            en: 'Welcome to Solver Mode !',\n            ja: 'Solver Mode へようこそ！',\n        },{\n            en: 'Press the \"Run\" when you have finished enterring the values.',\n            ja: '入力が完了したら \"Run\" を押してください。',\n        },{\n            en: 'Complete !! Press the \"Clear\" to solve the new Sudoku.',\n            ja: '完了しました。新しい数独を解くには \"Clear\" を押してください。',\n        },{\n            en: 'This Sudoku connnot be solved. Please enter the correct value.',\n            ja: 'この数独は解けません。正しい値を入力してください。',\n        },\n    ],[\n        {\n            en: 'Welcome to Challenger Mode ! Select a Sudoku level.',\n            ja: 'Challenger Mode へようこそ！ 数独のレベルを選択してください。',\n        },{\n            en: '=== MAGIC SQUARE ===',\n            ja: '=== 魔法陣 ===',\n        },{\n            en: 'Game clear!! Press the \"Clear\" to solve the new Sudoku.',\n            ja: 'ゲームクリア！新しい数独を解くには \"Clear\" を押してください。',\n        },{\n            en: 'There is something wrong. Please solve it again.',\n            ja: 'どこか間違いがあります。解き直して下さい。',\n        },{\n            en: 'LEVEL : : ',\n            ja: 'LEVEL : : ',\n        },{\n            en: 'Selectable numbers : : ',\n            ja: '選択可能な数字 : : ',\n        },\n    ]\n];\n\nfunction selectRandomData(dataSudoku){\n    let random = Math.floor(Math.random() * dataSudoku.length);\n    return dataSudoku[random];\n}\n\nclass Main extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            history: [{\n                squares: Array(81).fill(null),\n                lock: [],\n            }],\n            step: 0,\n            edit: null,\n            possible: true,\n            finish: false,\n            level: null,\n        };\n    }\n\n    addDetailChallenger(comment){\n        const edit = this.state.edit;\n        const level = this.state.level;\n        let newComment = '';\n\n        if(typeof(edit) === 'number'){\n            newComment = comment + this.getHintNumbers();\n            return newComment;\n        }else if(edit === null && comment === 'LEVEL : : '){\n            if(level === 'easy'){\n                newComment = comment + 'EASY';\n            }else if(level === 'normal'){\n                newComment = comment + 'NORMAL';\n            }else if(level === 'hard'){\n                newComment = comment + 'HARD';\n            }else{\n                newComment = comment + '???';\n            }\n            return newComment;\n        }else{\n            return comment;\n        }\n    }\n\n    changeData(numberData){\n        let stringData = '';\n\n        for(let i = 0; i < numberData.length; i++){\n            if(numberData[i] == null){\n                stringData = stringData + '.';\n            }else{\n                stringData = stringData + String(numberData[i]);\n            }\n        }\n        return stringData;\n    }\n\n    clearState(){\n        this.setState({\n            history: [{\n                squares: Array(81).fill(null),\n                lock: [],\n            }],\n            step: 0,\n            edit: null,\n            possible: true,\n            finish: false,\n            level: null,\n        });\n    }\n\n    commentSolverMode(){\n        const exist = this.judgeExistData();\n        const possible = this.state.possible;\n        const finish = this.state.finish;\n        let comment;\n\n        if(!exist){\n            comment = comments[0][0];\n        }else if(exist && possible && !finish){\n            comment = comments[0][1];\n        }else if(finish && possible){\n            comment = comments[0][2];\n        }else if(!possible){\n            comment = comments[0][3];\n        }\n\n        return comment;\n    }\n\n    commentChallengerMode(){\n        const exist = this.judgeExistData();\n        const edit = this.state.edit;\n        const isSolved = this.solveSudoku();\n        const dataNull = this.searchNullData();\n        const isMagic = this.judgeMagicSquare();\n        let comment;\n\n        if(!exist && edit === null){\n            comment = comments[1][0];\n        }else if(isMagic){\n            comment = comments[1][1];\n        }else if(dataNull === 0 && isSolved){\n            comment = comments[1][2];\n        }else if(dataNull <= 20 && isSolved === false){\n            comment = comments[1][3];\n        }else if(exist && edit === null){\n            comment = comments[1][4];\n        }else if(typeof(edit) === 'number'){\n            comment = comments[1][5];\n        }else{\n            comment = '';\n        }\n\n        return comment;\n    }\n\n    createAssistInfo(selectedNumbers){\n        let hintNumbers = '';\n\n        if(selectedNumbers == null){\n            hintNumbers = 'SECRET';\n            return hintNumbers;\n        }else{\n            for(let i = 0; i < selectedNumbers.length; i++){\n                hintNumbers = hintNumbers + selectedNumbers.charAt(i);\n                hintNumbers = hintNumbers + ', ';\n            }\n            hintNumbers = hintNumbers.slice(0, -2);\n\n            if(hintNumbers.length === 1){\n                hintNumbers = 'SECRET';\n            }\n            return hintNumbers;\n        }\n    }\n\n    createMessageClearButton(){\n        let message = messages[0][0];\n        message = this.selectTextLang(message);\n\n        return message;\n    }\n\n    getCurrentDataSet(){\n        const history = this.getHistoryData();\n        const current = history[history.length - 1];\n\n        return current;\n    }\n\n    getCurrentLock(){\n        const lock = this.getCurrentDataSet().lock.slice();\n\n        return lock;\n    }\n\n    getCurrentSquares(){\n        const history = this.state.history;\n        const current = history[this.state.step];\n        const squares = current.squares.slice();\n\n        return squares;\n    }\n\n    getHintNumbers(){\n        const squares = this.getCurrentSquares();\n        const edit = this.state.edit;\n        const selectedNumbers = load(this.changeData(squares));\n        let hintNumbers = this.createAssistInfo(selectedNumbers[edit]);\n\n        return hintNumbers;\n    }\n\n    getHistoryData(){\n        const history = this.state.history.slice(0, this.state.step + 1);\n\n        return history;\n    }\n\n    insertData(dataSudoku, level){\n        const history = this.getHistoryData();\n        const lock = this.searchFilledCellIndex(dataSudoku);\n\n        this.setState({\n            history: history.concat([{\n                squares: dataSudoku,\n                lock: lock,\n            }]),\n            step: history.length,\n            finish: false,\n            level: level,\n        });\n    }\n\n    judgeExistData(){\n        const squares = this.getCurrentSquares();\n\n        let judge = squares.some((value) => {\n            return value >= 1;\n        });\n\n        return judge;\n    }\n\n    judgeMagicSquare(){\n        const squares = this.getCurrentSquares();\n\n        let judge = magicSquare.some((value) => {\n            return squares.toString() === value.toString();\n        });\n\n        return judge;\n    }\n\n    lockEditor(numberInCell){\n        const history = this.state.history;\n        const current = history[this.state.step];\n        const filledCell = current.lock.slice();\n\n        let lock = filledCell.some(function(value){\n            return value === numberInCell;\n        });\n\n        return lock;\n    }\n\n    insertLevelInfo(type){\n        let message = messages[1][0];\n        message = this.selectTextLang(message);\n\n        if(type === 'easy'){\n            message = message + ' (Easy Mode)';\n        }else if(type === 'normal'){\n            message = message + ' (Normal Mode)';\n        }else if(type === 'hard'){\n            message = message + ' (Hard Mode)';\n        }\n\n        return message;\n    }\n\n    searchFilledCellIndex(data){\n        let cellIndex = [];\n\n        data.map(function(value, index){\n            if(value >= 1){\n                cellIndex.push(index);\n            }\n            return null;\n        });\n\n        return cellIndex;\n    }\n\n    searchNullData(){\n        const squares = this.getCurrentSquares();\n        let cnt = 0;\n\n        for(let i = 0; i < squares.length; i++){\n            if(squares[i] === null){\n                cnt++;\n            }\n        }\n\n        return cnt;\n    }\n\n    selectData(buttonType){\n        let data;\n        if(buttonType === 'test'){\n            data = selectRandomData(dataHard);\n        }else if(buttonType === 'easy'){\n            data = selectRandomData(dataEasy);\n        }else if(buttonType === 'normal'){\n            data = selectRandomData(dataNormal);\n        }else if(buttonType === 'hard'){\n            data = selectRandomData(dataHard);\n        }else{\n            data = selectRandomData(magicSquare);\n        }\n\n        return data;\n    }\n\n    selectTextLang(texts){\n        const isEnglish = this.props.isEnglish;\n        let text;\n\n        if(isEnglish){\n            text = texts.en;\n        }else if(!isEnglish){\n            text = texts.ja;\n        }\n\n        return text;\n    }\n\n    showWindowMessage(buttonAction, buttonType){\n        let message;\n\n        if(buttonAction === 'clear'){\n            message = this.createMessageClearButton();\n        }else if(buttonAction === 'insert'){\n            message = this.insertLevelInfo(buttonType);\n        }\n\n        return message;\n    }\n\n    solveSudoku(){\n        const squares = this.getCurrentSquares();\n        const stringData = this.changeData(squares);\n        const isSolved = search(load(stringData));\n\n        return isSolved;\n    }\n\n\n    // EVENT -------------------------------------------------------------------\n\n    handleClearData = () => {\n        if(this.judgeExistData()){\n            if(window.confirm(this.showWindowMessage('clear'))){\n                this.clearState();\n            }\n        }\n    }\n\n    handleInsertData = (e) => {\n        const buttonType = e.target.id;\n        const exist = this.judgeExistData();\n        let dataSudoku;\n        if(exist){\n            if(window.confirm(this.showWindowMessage('insert', buttonType))){\n                dataSudoku = this.selectData(buttonType);\n                this.insertData(dataSudoku, buttonType);\n            }\n        }else if(!exist){\n            dataSudoku = this.selectData(buttonType);\n            this.insertData(dataSudoku, buttonType);\n        }\n    }\n\n    handleRedo = () => {\n        const step = this.state.step;\n        const length = this.state.history.length;\n        if(step === length - 1){\n            return null;\n        }else{\n            const nextStep = step + 1;\n            this.setState({\n                step: nextStep,\n            });\n        }\n    }\n\n    handleSaveData = (e) => {\n        e.preventDefault();\n        const history = this.getHistoryData();\n        const squares = this.getCurrentDataSet().squares.slice();\n        const lock = this.getCurrentLock();\n        const input = e.target.firstChild;\n        const id = e.target.id;\n        let newData = squares.concat();\n        newData[id] = input.value;\n\n        this.setState({\n            history: history.concat([{\n                squares: newData,\n                lock: lock,\n            }]),\n            step: history.length,\n            edit: null,\n        });\n    }\n\n    handleShowEditor = (e) => {\n        this.setState({\n            edit: parseInt(e.target.id, 10),\n        });\n    }\n\n    handleSolveSudoku = () => {\n        const history = this.getHistoryData();\n        const lock = this.getCurrentLock();\n        const isSolved = this.solveSudoku();\n\n        if(isSolved === false){\n            this.setState({\n                possible: false,\n            });\n        }else{\n            this.setState({\n                history: history.concat([{\n                    squares: isSolved,\n                    lock: lock,\n                }]),\n                step: history.length,\n                possible: true,\n                finish: true,\n            });\n        }\n    }\n\n    handleUndo = () => {\n        const step = this.state.step;\n\n        if(step === 0){\n            return null;\n        }else{\n            const prevStep = step - 1;\n            this.setState({\n                step: prevStep,\n            });\n        }\n    }\n\n\n\n    // RENDER -------------------------------------------------------------------\n\n    renderComment(){\n        const isSolver = this.props.isSolver;\n        let comment;\n\n        if(isSolver){\n            comment = this.commentSolverMode();\n        }else if(!isSolver){\n            comment = this.commentChallengerMode();\n        }\n\n        comment = this.selectTextLang(comment);\n\n        if(!isSolver){\n            comment = this.addDetailChallenger(comment);\n        }\n\n        return (\n            <p className=\"comment\">{comment}</p>\n        );\n    }\n\n    renderEditor(cell){\n        const squares = this.getCurrentSquares();\n        let lock = this.lockEditor(cell);\n        const edit = this.state.edit;\n        const finish = this.state.finish;\n\n        if(!lock && cell === edit && !finish){\n            return(\n                <form id={cell} onSubmit={this.handleSaveData} >\n                    <input type=\"number\" min=\"1\" max=\"9\" />\n                </form>\n            );\n        }else if(lock || edit !== cell || finish){\n            return squares[cell];\n        }\n    }\n\n    renderSidebarLeft(){\n        const isSolver = this.props.isSolver;\n\n        if(isSolver){\n            return(\n                <Col\n                    xs={{span: 0, order:2}}\n                    lg={{span: 3, order: 1, offset: 0}}\n                    xl={{span: 2, order: 1, offset: 1}}\n                >\n                </Col>\n            );\n        }else if(!isSolver){\n            return(\n                <Col\n                    xs={{span: 6, order: 2}}\n                    md={{span: 5, offset: 1}}\n                    lg={{span: 3, order: 1, offset: 0}}\n                    xl={{span: 2, order: 1, offset: 1}}\n                >\n                    <div className=\"Right\">\n                        <button id=\"easy\" className=\"normal\" onClick={this.handleInsertData}>{iconSmile} Easy</button>\n                        <button id=\"normal\" className=\"normal\" onClick={this.handleInsertData}>{iconMeh} Normal</button>\n                        <button id=\"hard\" className=\"normal\" onClick={this.handleInsertData}>{iconDizzy} Hard</button>\n                    </div>\n                </Col>\n            );\n        }else{\n            return null;\n        }\n    }\n\n    renderSidebarRight(){\n        const isSolver = this.props.isSolver;\n\n        if(isSolver){\n            return(\n                <Col\n                    xs={{span: 12, order: 3}}\n                    md={{span: 10, offset: 1}}\n                    lg={{span: 3, offset: 0}}\n                    xl={2}\n                >\n                    <div className=\"Left\">\n                        <button className=\"normal\" onClick={this.handleClearData}>{iconTrash} Clear</button>\n                        <button id=\"test\" className=\"normal\" onClick={this.handleInsertData}>{iconCalculator} Test</button>\n                        <button className=\"normal\" onClick={this.handleSolveSudoku}>{iconPlay} Run</button>\n                    </div>\n                </Col>\n            );\n        }else if(!isSolver){\n            return(\n                <Col\n                    xs={{span: 6, order: 3}}\n                    md={5}\n                    lg={3}\n                    xl={2}\n                >\n                    <div className=\"Right\">\n                        <button className=\"normal\" onClick={this.handleClearData}>{iconTrash} Clear</button>\n                        <button className=\"normal\" onClick={this.handleRedo}>{iconRedo} Redo</button>\n                        <button className=\"normal\" onClick={this.handleUndo}>{iconUndo} Undo</button>\n                    </div>\n                </Col>\n            );\n        }else{\n            return null;\n        }\n    }\n\n    renderSquare(i){\n        let endId = i * 9;\n\n        return(\n            <div className=\"sudoku-row\">\n                <div id={endId+0} className={this.lockEditor(endId+0) ? \"block inserted\" : \"block\" }>{this.renderEditor(endId+0)}</div>\n                <div id={endId+1} className={this.lockEditor(endId+1) ? \"block inserted\" : \"block\" }>{this.renderEditor(endId+1)}</div>\n                <div id={endId+2} className={this.lockEditor(endId+2) ? \"block inserted\" : \"block\" }>{this.renderEditor(endId+2)}</div>\n                <div id={endId+3} className={this.lockEditor(endId+3) ? \"block inserted\" : \"block\" }>{this.renderEditor(endId+3)}</div>\n                <div id={endId+4} className={this.lockEditor(endId+4) ? \"block inserted\" : \"block\" }>{this.renderEditor(endId+4)}</div>\n                <div id={endId+5} className={this.lockEditor(endId+5) ? \"block inserted\" : \"block\" }>{this.renderEditor(endId+5)}</div>\n                <div id={endId+6} className={this.lockEditor(endId+6) ? \"block inserted\" : \"block\" }>{this.renderEditor(endId+6)}</div>\n                <div id={endId+7} className={this.lockEditor(endId+7) ? \"block inserted\" : \"block\" }>{this.renderEditor(endId+7)}</div>\n                <div id={endId+8} className={this.lockEditor(endId+8) ? \"block inserted\" : \"block\" }>{this.renderEditor(endId+8)}</div>\n            </div>\n        );\n    }\n\n    renderSudoku(){\n        return(\n            <div id=\"sudoku\" className=\"Sudoku\" onDoubleClick={this.handleShowEditor}>\n                {this.renderSquare(0)}\n                {this.renderSquare(1)}\n                {this.renderSquare(2)}\n                {this.renderSquare(3)}\n                {this.renderSquare(4)}\n                {this.renderSquare(5)}\n                {this.renderSquare(6)}\n                {this.renderSquare(7)}\n                {this.renderSquare(8)}\n            </div>\n        );\n    }\n\n    render(){\n        return(\n            <main>\n                <Container fluid>\n                    <Row>\n                        <Col\n                            xs={12}\n                            md={{span: 10, offset: 1}}\n                            lg={{span: 6, offset: 3}}\n                        >\n                            <div className=\"Comment\">\n                                <div className=\"inner\">\n                                    {this.renderComment()}\n                                </div>\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row>\n                        {this.renderSidebarLeft()}\n                        <Col\n                            xs={{span: 12, order: 1}}\n                            md={{span: 10, offset: 1}}\n                            lg={{span: 6, order: 1, offset: 0}}\n                        >\n                            {this.renderSudoku()}\n                        </Col>\n                        {this.renderSidebarRight()}\n                    </Row>\n                </Container>\n            </main>\n        );\n    }\n}\n\nexport default Main;\n","import './Footer.min.css';\nimport './Card.min.css';\n\nimport {Container, Row, Col} from 'react-bootstrap';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faGithubSquare, faLine, faTwitterSquare} from '@fortawesome/free-brands-svg-icons';\nimport {faRobot, faLightbulb, faCheck} from '@fortawesome/free-solid-svg-icons';\n\nconst iconLine = <FontAwesomeIcon icon={faLine} />;\nconst iconTwitter = <FontAwesomeIcon icon={faTwitterSquare} />;\nconst iconRobot = <FontAwesomeIcon icon={faRobot} />;\nconst iconLightbulb = <FontAwesomeIcon icon={faLightbulb} />;\nconst iconGithubSquare = <FontAwesomeIcon icon={faGithubSquare} />;\nconst iconCheck = <FontAwesomeIcon icon={faCheck} />;\n\nconst leftTitles = [\n    {\n        en: \"How to use Solver Mode\",\n        ja: \"Solver Mode の使い方\",\n    },{\n        en: \"How to use Challenger Mode\",\n        ja: \"Challenger Mode の使い方\",\n    }\n];\n\nconst rightTitles = [\n    {\n        en: \"About each button\",\n        ja: \"各ボタンの使い方\",\n    },{\n        en: \"About each button\",\n        ja: \"各ボタンの使い方\",\n    }\n];\n\nconst leftSolver = [\n    {\n        id: 1,\n        en: \"Enter the Sudoku you want to solve.\",\n        ja: \"解決したい数独問題を入力して下さい。\",\n    },{\n        id: 2,\n        en: \"Double-click the cell you want to enter and enter an integer from 1 to 9.\",\n        ja: \"入力したいマスをダブルクリックして1~9の整数を入力して下さい。\",\n    },{\n        id: 3,\n        en: \"Press [Run] when you're done.\",\n        ja: \"入力が完了したら [Run] を押して下さい。\" ,\n    },{\n        id: 4,\n        en: \"If it is a solveable Sudoku, the solution will be displayed.\",\n        ja: \"解決可能な数独であれば解が表示されます。\",\n    },{\n        id: 5,\n        en: \"When you press the [Test] button, Sudoku will be randomly entered.\",\n        ja: \"[Test] ボタンを押すと数独の問題がランダムに入力されます。\",\n    }\n];\n\nconst leftChallenger = [\n    {\n        id: 1,\n        en: \"Please select the difficulty level first.\",\n        ja: \"最初に難易度を選択して下さい。\",\n    },{\n        id: 2,\n        en: \"The difficulty level of Sudoku can be selected from three types: [Easy], [Normal], and [Hard].\",\n        ja: \"数独の難易度は [Easy], [Normal], [Hard] の三種類から選択可能です。\",\n    },{\n        id: 3,\n        en: \"Tips for solving Sudoku are displayed in the comment area.\",\n        ja: \"コメントエリアには数独を解くためのヒントが表示されます。\",\n    },{\n        id: 4,\n        en: \"Double-click the cell you want to enter and enter an integer from 1 to 9.\",\n        ja: \"入力したいマスをダブルクリックして1~9の整数を入力して下さい。\",\n    },{\n        id: 5,\n        en: \"If there is only one number that can be entered, it will be displayed as 'SECRET'.\",\n        ja: \"入力可能な数字が一つしかない場合は 'SECRET' と表示されます。\"\n    },\n];\n\nconst rightSolver = [\n    {\n        id: 1,\n        en: \"Press the [Challenger] button to switch to Challenger mode.\",\n        ja: \"[Challenger] ボタンを押すとChallengerモードに移行します。\",\n    },{\n        id: 2,\n        en: \"You can switch to Japanese from the [English] button.\",\n        ja: \"[Japanese] ボタンから英語との切り替えが可能です。\",\n    },{\n        id: 3,\n        en: \"You can clear the data by pressing the [Clear] button.\",\n        ja: \"[Clear] ボタンを押すとデータの消去ができます。\",\n    },{\n        id: 4,\n        en: \"When you press the [Test] button, Sudoku will be randomly entered.\",\n        ja: \"[Test] ボタンを押すと数独の問題がランダムに入力されます。\",\n    },{\n        id: 5,\n        en: \"Press the [Run] button to solve the Sudoku.\",\n        ja: \"[Run] ボタンを押すと数独問題を解きます。\",\n    },\n];\n\nconst rightChallenger = [\n    {\n        id: 1,\n        en: \"Press the [Solver] button to switch to Solver mode.\",\n        ja: \"[Solver] ボタンを押すとSolverモードに移行します。\",\n    },{\n        id: 2,\n        en: \"You can switch to Japanese from the [English] button.\",\n        ja: \"[Japanese] ボタンから英語との切り替えが可能です\",\n    },{\n        id: 3,\n        en: \"Pressing the [Easy] button will bring up a easy level Sudoku.\",\n        ja: \"[Easy] ボタンを押すと簡単な数独問題が表示されます。\",\n    },{\n        id: 4,\n        en: \"Pressing the [Normal] button will bring up a middle level Sudoku.\",\n        ja: \"[Normal] ボタンを押すと中程度の数独問題が表示されます。\",\n    },{\n        id: 5,\n        en: \"Pressing the [Hard] button will bring up a difficult level Sudoku.\",\n        ja: \"[Hard] ボタンを押すと難しい数独問題が表示されます。\",\n    },{\n        id: 6,\n        en: \"You can clear the data by pressing the [Clear] button.\",\n        ja: \"[Clear] ボタンを押すとデータの消去ができます。\",\n    },{\n        id: 7,\n        en: \"You can go back next step by pressing the [Redo] button.\",\n        ja: \"[Redo] ボタンを押すと一つ先に戻ることができます。\",\n    },{\n        id: 8,\n        en: \"You can go back previous step by pressing the [Undo] button.\",\n        ja: \"[Undo] ボタンを押すと一つ前に戻ることができます。\",\n    },\n];\n\nvar year = new Date().getFullYear();\n\nfunction Title(props){\n    const titles = props.titles;\n    const isSolver = props.isSolver;\n    const isEnglish = props.isEnglish;\n    let title ;\n    if(isSolver && isEnglish){\n        title = titles[0].en;\n    }else if(isSolver && !isEnglish){\n        title = titles[0].ja;\n    }else if(!isSolver && isEnglish){\n        title = titles[1].en;\n    }else if(!isSolver && !isEnglish){\n        title = titles[1].ja;\n    }else{\n        return null;\n    }\n    return(\n        <span>{title}</span>\n    );\n}\n\nfunction TextList(props){\n    const texts = props.texts;\n    const isEnglish = props.isEnglish;\n    const listItems = texts.map((text) =>\n        <li key={text.id.toString()}>\n            {isEnglish ? text.en : text.ja}\n        </li>\n    );\n    return(\n        <ol>{listItems}</ol>\n    );\n}\n\nfunction Footer(props){\n    const isSolver = props.isSolver;\n    const isEnglish = props.isEnglish;\n\n    return(\n        <footer>\n            <Container fluid>\n                <Row>\n                    <Col xs={12} className=\"share-text\"><h3>=== SHARE ===</h3></Col>\n                </Row>\n                <Row>\n                    <Col className=\"share-btns\" xs={12}>\n                        <div className=\"share-btn\">\n                            <a href=\"https://twitter.com/share?\n                                url=https://shogowada1999.github.io/sudoku-solver/&\n                                text=Sudoku Solver created by Shogo Wada\"\n                                rel=\"nofollow noreferrer\"\n                                target=\"_blank\"\n                                className=\"btn-twitter\"\n                            >\n                                {iconTwitter}\n                            </a>\n                        </div>\n                        <div className=\"share-btn\">\n                            <a href=\"https://social-plugins.line.me/lineit/share?url=https://shogowada1999.github.io/sudoku-solver/\" className=\"btn-line\">{iconLine}</a>\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n            <Container fluid>\n                <Row>\n                    <Col className=\"wrap\" xs={12} md={6}>\n                        <div className=\"Card\">\n                            <h2>\n                                {isSolver ? iconRobot : iconLightbulb}\n                                <Title titles={leftTitles} isSolver={isSolver} isEnglish={isEnglish} />\n                            </h2>\n                            <TextList\n                                texts={isSolver ? leftSolver : leftChallenger}\n                                isEnglish={isEnglish}\n                            />\n                        </div>\n                    </Col>\n                    <Col className=\"wrap\" xs={12} md={6}>\n                        <div className=\"Card\">\n                            <h2>\n                                {iconCheck}\n                                <Title titles={rightTitles} isSolver={isSolver} isEnglish={isEnglish} />\n                            </h2>\n                            <TextList\n                                texts={isSolver ? rightSolver : rightChallenger}\n                                isEnglish={isEnglish}\n                            />\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n            <Container fluid>\n                <Row>\n                    <Col className=\"credit\" xs={{span: 6, offset: 3}}>\n                        <small>Copyright © {year} <a href=\"https://wadablog.net/\" className=\"credit-link\">Shogo Wada</a></small>\n                    </Col>\n                    <Col className=\"icon-box\" xs={3}>\n                        <a href=\"https://github.com/shogowada1999\">{iconGithubSquare}</a>\n                    </Col>\n                </Row>\n            </Container>\n        </footer>\n    );\n}\n\nexport default Footer;\n","import React from 'react';\n\nimport './App.min.css';\nimport './Header.min.css';\nimport './Navigation.min.css';\nimport './Button.min.css';\n\nimport Main from './Main';\nimport Footer from './Footer';\n\nimport {Container, Row, Col} from 'react-bootstrap';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faRobot, faLightbulb, faLanguage} from '@fortawesome/free-solid-svg-icons';\n\nconst iconRobot = <FontAwesomeIcon icon={faRobot} />;\nconst iconLightbulb = <FontAwesomeIcon icon={faLightbulb} />;\nconst iconLanguage = <FontAwesomeIcon icon={faLanguage} />;\n\nclass App extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            isSolver: true,\n            isEnglish: true,\n        };\n        this.MainRef = React.createRef();\n    }\n\n    changeMode(e){\n        let isSolver = this.state.isSolver;\n        if(e !== isSolver){\n            isSolver = !isSolver;\n        }\n\n        this.MainRef.current.clearState();\n\n        this.setState({\n            isSolver: isSolver,\n        });\n    }\n\n    changeLanguage(){\n        const isEnglish = !this.state.isEnglish;\n        this.setState({\n            isEnglish: isEnglish,\n        });\n    }\n\n    render(){\n        const props = {\n            isSolver: this.state.isSolver,\n            isEnglish: this.state.isEnglish,\n        };\n\n        return(\n            <div>\n                <header>\n                    <Container fluid>\n                        <Row>\n                            <Col xs={12}>\n                                <h1>Sudoku Solver</h1>\n                            </Col>\n                        </Row>\n                    </Container>\n                    <Container fluid>\n                        <nav className=\"Navigation\">\n                            <button\n                                onClick={() => this.changeMode(true)}\n                                className={props.isSolver ? \"active\" : \"inactive\"}\n                            >\n                                {iconRobot} Solver\n                            </button>\n                            <button\n                                onClick={() => this.changeMode(false)}\n                                className={props.isSolver ? \"inactive\" : \"active\"}\n                            >\n                                {iconLightbulb} Challenger\n                            </button>\n                            <button\n                                onClick={() => this.changeLanguage()}\n                                className=\"normal\"\n                            >\n                                {iconLanguage} {props.isEnglish ? \"English\" : \"Japanese\"}\n                            </button>\n                        </nav>\n                    </Container>\n                </header>\n                <Main ref={this.MainRef} {...props} />\n                <Footer {...props} />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.min.css';\n\nimport App from './component/App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}